/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2312                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      phaseProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// air as continuous phase and particles as the discrete phase
phases          (particles air);

particles
{
    diameterModel constant;
    constantCoeffs
    {
        d               275.0e-6; // mean particle diameter
    }

    alphaMax        0.63; // maximum allowable packing fraction
    residualAlpha   1e-6;
}

air
{
    diameterModel constant; // constant, isothermal, IATE.. 
    // when you use, isothermal, you should define, d0 and p0
    // IATE : interfacial Area Transport eq. for buble diameter
    constantCoeffs
    {
        d               1;
    }
    residualAlpha   0;
}
// set continuous phase
blending
{
    default
    {
        type            none;
        continuousPhase air;
    }
}

sigma
(
    (particles and air) 0
);

aspectRatio
(
);

drag
(
    (particles in air)
    {
        type            GidaspowErgunWenYu; 
        // Ergun(packed)
        // Gibilaro (diulte to moderate packing)
        // GidaspowErgunWenYu (Ergun for dense->WenYu,Gidaspow,)
        // GidaspowSchillerNaumann porosity: correction function
        // SchillerNaumann : dispersed bubbly flows. it does not include the porosity correction function f = 1
        // IshiiZuber, ...
        residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }
    }
);

virtualMass
(
);

heatTransfer
(
    (particles in air)
    {
        type            RanzMarshall;
        // heat transfer coefficient between particles and air 
        // one-film resistance model.
        // spherical : analytical solution for heat transfer inside a sphere.
        residualAlpha   1e-3;
    }
);

lift
(
);

phaseTransfer
(
);

wallLubrication
(
);

turbulentDispersion
(
);

// Minimum allowable pressure
pMin            10000;


// ************************************************************************* //
